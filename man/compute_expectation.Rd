% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{compute_expectation}
\alias{compute_expectation}
\title{Compute expectation of f(x)}
\usage{
compute_expectation(x, weight, f = identity, ...)
}
\arguments{
\item{x}{an array of dimension D x T x M x N with samples drawn
from one of the adaptive importance sampling method.}

\item{weight}{an array of dimension T x M x N with the weight corresponding
to every sample of \code{x}.}

\item{f}{a function to be applied to each sample \code{x}.}

\item{...}{additional parameters for the function \code{f}.}
}
\description{
\code{compute_expectation} computes the expectation of the samples \code{x}.
}
\details{
The function computes the expectation of a function of 
the samples \code{x} generated by
the adaptive importance sampling methods:
\code{\link{lais}}, \code{\link{apis}} and \code{\link{pmc}}. 
If the function \code{f} returns a vector, the expectation is computed
for every dimension of the function output.
}
\examples{
# draw samples from the "banana shaped distribution"
# defined by the loglikelihood lposterior_6.

lposterior_6 <- function(x){
  x1 <- x[1]
  x2 <- x[2]
  logtarget <-  -1/32 * 
    (4 - 10 * x1 - x2^2)^2 - x1^2/50 - x2^2/50
}

D <- 2
T <- 100
N <- 50
M <- 4

lais_lp6_r <- lais(lposterior_6,
   mu = matrix(rnorm(D * N, sd = 3), nrow = D, ncol = N),
   sig2_adapt = rep(1, D), sig2_samp = rep(1, D),
   compute_logdenom = compute_logdenom_byrow,
   N = N, T = T, M = M)
   
# expectation of x,  theorical value: ~ [-1.09, 0]
Ex <- with(lais_lp6_r, compute_expectation(x, weight))

# expectation of x^2
Ex2 <- with(lais_lp6_r,
 compute_expectation(x, weight, f = function(x) x^2))

# variance of x
with(lais_lp6_r,
 compute_expectation(x, weight, f = function(x) (x - Ex)^2))
Ex2 - Ex^2
}
